     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 61626364                    a db 'abcd'
    14 00000004 <res 00000064>              cuv resb 100
    15                                  
    16                                  ; our code starts here
    17                                  segment code use32 class=code
    18                                      start:
    19                                          ; ... 
    20 00000000 BE[00000000]                    mov esi,a
    21 00000005 BA00000000                      mov edx,0
    22 0000000A 8D7603                          lea esi,[esi+3]
    23 0000000D FD                              std
    24                                          repeta:
    25 0000000E AC                                  lodsb
    26 0000000F 3C00                                cmp al,0
    27 00000011 7409                                je iesi
    28 00000013 8882[04000000]                      mov [cuv+edx],al
    29 00000019 42                                  inc edx
    30                                              
    31 0000001A EBF2                            jmp repeta
    32                                          iesi:
    33 0000001C BB[04000000]                    mov ebx, cuv
    34                                          ; exit(0)
    35 00000021 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    36 00000023 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
